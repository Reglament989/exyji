name: Build
on:
  release:
    types: [created]
jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "15.0.2"
      - uses: subosito/flutter-action@v1
        with:
          channel: beta
      - name: Getting dependencies
        run: flutter pub get
      - name: Test stage
        run: flutter test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info
      - name: Build application for android.
        run: flutter build apk --split-per-abi
      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.APP_VERSION }}
          name: ${{ env.APP_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "build/app/outputs/apk/release/*.apk,build/ios/iphoneos/app.ipa"
      - name: Slack notify
        uses: 8398a7/action-slack@v3
        with:
          job_name: Build
          status: custom
          fields: workflow,job,commit,repo,author,took,message,eventName
          custom_payload: |
            {
              text: `Workflow: ${process.env.AS_WORKFLOW}\tMessage: ${process.env.AS_MESSAGE}\nEvent: ${process.env.AS_EVENT_NAME}\tAuthor: ${process.env.AS_AUTHOR}`,
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `New release! (${process.env.AS_COMMIT}) of ${process.env.AS_REPO} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
